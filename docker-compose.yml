# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
# Start database: docker-compose up db
# Run migrations: docker-compose run migrate
#       Stop all: docker-compose down (add -v to wipe db)
#
version: '3.8'

volumes:
  db_data:
  pgadmin:
  vapor_public:

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  DATABASE_HOST: db
  DATABASE_NAME: ${VAPOR_DATABASE_NAME:-vapor_database}
  DATABASE_USERNAME: ${VAPOR_DATABASE_USERNAME:-vapor_username}
  DATABASE_PASSWORD: ${VAPOR_DATABASE_PASSWORD:-vapor_password}
  WOMPI_PUBLIC_KEY: ${WOMPI_PUBLIC_KEY:-pub_test_1234567890}
  WOMPI_PRIVATE_KEY: ${WOMPI_PRIVATE_KEY:-prv_test_1234567890}
  POSTHOG_PK_KEY: ${POSTHOG_PK_KEY:-pk_test_1234567890}
  POSTHOG_HOST: ${POSTHOG_HOST:-https://app.posthog.com}
  POSTHOG_API_KEY: ${POSTHOG_API_KEY:-}
  POSTHOG_PROJECT_ID: ${POSTHOG_PROJECT_ID:-}
  
networks:
  vapor:
    external: true
  vapor_database:
    external: true

services:
  vapor:
    image: simple_cms:latest
    build:
      context: .
    restart: always
    deploy:
      replicas: 2
    environment:
      <<: *shared_environment
    depends_on:
      - db
      - redis
    networks:
      - vapor
      - vapor_database
    volumes:
      # Mount the public directory to serve files.
      - vapor_public:/app/Public
      - ./settings.json:/app/settings.json:ro

    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "80"]
  migrate:
    image: simple_cms:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--yes"]
    networks:
      - vapor
      - vapor_database
    deploy:
      replicas: 0
  revert:
    image: simple_cms:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--revert", "--yes"]
    networks:
      - vapor
      - vapor_database
    deploy:
      replicas: 0
  redis:
    image: redis:alpine
    restart: always
    networks:
      - vapor

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: ${REDIS_COMMANDER_USER:-root}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-qwerty}
    ports:
      - '8081:8081'
    depends_on:
      - redis
    networks:
      - vapor

  db:
    image: postgres:alpine
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${VAPOR_DATABASE_USERNAME:-vapor_username}
      POSTGRES_PASSWORD: ${VAPOR_DATABASE_PASSWORD:-vapor_password}
      POSTGRES_DB: ${VAPOR_DATABASE_NAME:-vapor_database}
    networks:
      - vapor_database

  pgadmin:
    image: dpage/pgadmin4
    environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@pgadmin.com}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
        PGADMIN_LISTEN_PORT: 80
    ports:
      - '15432:80'
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - vapor_database
