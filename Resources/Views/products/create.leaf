#extend("layouts/layout"):
#export("body"):

<script>
let variants = [];
let images = [];

function toBase64(file) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = () => {
      let encoded = reader.result.toString().replace(/^data:(.*,)?/, '');
      if ((encoded.length % 4) > 0) {
        encoded += '='.repeat(4 - (encoded.length % 4));
      }
      resolve(encoded);
    };
    reader.onerror = error => reject(error);
  });
}

async function onFormSubmit(e) {
  e.preventDefault();
  const form = e.target;

  // convert images to base64
  for (let i = 0; i < variants.length; i++) {
    for (let j = 0; j < variants[i].images.length; j++) {
      const image = variants[i].images[j];
      const base64 = await toBase64(image);
      variants[i].images[j].dat = base64;
      variants[i].images[j].ext = image.name.split('.').pop();
    }
  }
  
  let payload = {
    title: form.name.value,
    description: form.description.value,
    category: form.category.value,
    variants: variants
  }

  let response = await fetch('/products', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      '_csrf': document.querySelector('input[name="_csrf"]').value
    },
    body: JSON.stringify(payload)
  })
  
  if (response.ok) {
    window.location.href = '/products';
  } else {
    console.log(response);
  }
}

function createImage(file) {
  const img = document.createElement('img');
  const reader = new FileReader();
  reader.readAsDataURL(file);
  reader.onload = () => {
    img.src = reader.result;
    img.classList.add('h-32', 'w-32', 'transition-all', 'duration-300', 'rounded-lg', 'cursor-pointer', 'filter', 'grayscale', 'hover:grayscale-0');
  }

  return img;
}

function buildVariation() {
  const name = document.querySelector('#variation_name').value;
  const availability = document.querySelector('#variation_availability').value;
  const price = document.querySelector('#variation_price').value;
  const salePrice = document.querySelector('#variation_sale_price').value;
  const stock = document.querySelector('#variation_stock').value;
  const sku = document.querySelector('#variation_sku').value;

  const variation = {
    name: name,
    availability: availability === 1 ? true : false,
    price: parseFloat(price),
    salePrice: parseFloat(salePrice),
    stock: parseInt(stock),
    sku: sku,
    images: (images === undefined) ? [] : images
  }

  return variation;
}

function buildTableRow(imageTitle, title, price, availability) {
  const table = document.getElementById('variations-table');
  const row = document.createElement('tr');
  const imageCol = document.createElement('td');
  const name = document.createElement('td');
  const priceCol = document.createElement('td');
  const salePrice = document.createElement('td');
  const actions = document.createElement('td');

  row.classList.add('bg-white', 'border-b', 'dark:bg-gray-800', 'dark:border-gray-700');
  imageCol.classList.add('px-6', 'py-4', 'whitespace-nowrap', 'text-sm', 'font-medium', 'text-gray-900', 'dark:text-white');
  name.classList.add('px-6', 'py-4');
  priceCol.classList.add('px-6', 'py-4');
  salePrice.classList.add('px-6', 'py-4');
  actions.classList.add('px-6', 'py-4');

  imageCol.appendChild(createImage(imageTitle));
  name.innerHTML = title;
  priceCol.innerHTML = price;
  salePrice.innerHTML = "salePrice";
  actions.innerHTML = `
    <button type="button" class="px-5 py-2 bg-red-800 text-white rounded" onClick="deleteVariation(event);">Eliminar</button>
  `;

  row.appendChild(imageCol);
  row.appendChild(name);
  row.appendChild(priceCol);
  row.appendChild(salePrice);
  row.appendChild(actions);
  table.appendChild(row);
}

function deleteVariation(event) {
  const index = event.target.dataset.index;
  variants.splice(index, 1);
  event.target.parentElement.parentElement.remove();
}

function addVariationToTable(event) {
  const variation = buildVariation();
  buildTableRow(variation.images[0], variation.name, variation.salePrice, variation.availability);
  variants.push(variation);
  resetVariationForm();
}

function resetVariationForm() {
  document.querySelector('#images-container').innerHTML = '';
  document.querySelector('#variation_name').value = '';
  document.querySelector('#variation_availability').value = '';
  document.querySelector('#variation_price').value = '';
  document.querySelector('#variation_sale_price').value = '';
  document.querySelector('#variation_stock').value = '';
  document.querySelector('#variation_sku').value = '';
  images = [];
}

function onFileSelection(event) {
  const files = event.target.files;
  const imagesContainer = document.getElementById('images-container');
  imagesContainer.innerHTML = '';

  images = Array.from(files).map(file => {
    const img = createImage(file);
    imagesContainer.appendChild(img);

    return file;
  });
}
</script>

<form action="/products" onSubmit="onFormSubmit(event);" method="post">
  #csrfFormField()
  
  <div class="flex flex-row-reverse items-center mb-5 px-5 py-5 rounded shadow bg-gray-900 text-white">
    <div class="flex-1">
      <h1 class="text-4xl">Agregar producto</h1>
      <p class="text-sm">Los campos marcados con * son obligatorios</p>
    </div>
    <div class="flex-1/2">
      <button type="submit" class="px-5 py-2 bg-blue-800 text-white rounded">Guardar</button>
    </div>
  </div>

  <div class="flex flex-col px-5 py-5 rounded-xl shadow bg-gray-100 mt-3">
    <h2 class="text-xl">Informacion basica</h2>
    <p class="text-sm mb-2">Informacion basica del producto</p>
    <hr class="mb-5" />

    <div>
      <div class="mb-6">
        <label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Nombre</label>
        <input type="text" 
          class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" 
          name="name" 
          id="name"
          class="form-control">
      </div>

      <div class="grid grid-cols-2 gap-4">
        <div class="mb-6">
          <label for="description"
            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Descripcion</label>
          <textarea name="description"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            id="description" class="form-control"></textarea>
        </div>
        
        <div class="flex flex-col">
          <div class="flex-0">
            <label for="category">Categoria</label>
            <select name="category"
              class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
              id="category" class="form-control">

              #for(category in categories):
              <option value="#(category.id)">#(category.title)</option>
              #endfor
            </select>
          </div>
          <div class="flex-none h-4"></div>
          <div class="flex-0">
            <button type="button" class="mt-5 px-5 py-2 bg-gray-600 text-white rounded shadow">Agregar Categoria</button>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <div class="flex flex-col px-5 py-5 rounded-xl shadow bg-gray-100 mt-3">
    <h2 class="text-xl">Agregar variaciones</h2>
    <p class="text-sm mb-2">Las variaciones son las caracteristicas que tiene el producto, por ejemplo: color, tama√±o, etc.</p>
    <hr class="mb-5" />
    
    <div class="grid grid-cols-2 gap-4">
        <div class="">
          <label for="variation_name">Nombre de la variacion</label>
          <input type="text"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            name="variation_name"
            id="variation_name" class="form-control">
        </div>

        <div class="">
          <label for="is_available">Disponibilidad</label>
          <select name="is_available"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            id="variation_availability">
            <option value="1">Disponible</option>
            <option value="0">No disponible</option>
          </select>
        </div>

        <div class="">
          <label for="price">Precio bruto</label>
          <input type="text" 
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            name="price"
            id="variation_price"
            class="form-control">
        </div>

        <div class="">
          <label for="price">Precio de venta</label>
          <input type="text"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            name="sale_price"
            id="variation_sale_price">
        </div>

        <div class="">
          <label for="quantity">Cantidad</label>
          <input type="text"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            name="stock"
            id="variation_stock">
        </div>

        <div class="">
          <label for="sku">SKU</label>
          <input type="text"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
            name="sku"
            id="variation_sku">
        </div>
    </div>
    <div class="flex-none h-10"></div>
    <div class="mt-5">
      
      <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white" for="user_avatar">Upload file</label>
      <input class="block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400"
        aria-describedby="user_avatar_help"
        onChange="onFileSelection(event);"
        id="user_avatar"
        name="images[]"
        type="file" multiple>
      <div class="mt-1 text-sm text-gray-500 dark:text-gray-300" id="user_avatar_help">A profile picture is useful to confirm your are logged into your account</div>
    </div>
    <div class="flex-none h-10"></div>
    <div class="flex flex-row-reverse items-center mb-5 px-5 py-5 rounded shadow bg-white text-white">
      <div class="flex-1">
        <div id="images-container" class="flex"></div>
      </div>
      <div class="flex-1/2">
        <button type="button" onClick="addVariationToTable(event);" class="px-5 py-2 bg-blue-800 text-white rounded">Agregar variacion</button>
      </div>
    </div>

    
    <div class="relative overflow-x-auto">
      <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
          <tr>
            <th scope="col" class="px-6 py-3">
              Imagen
            </th>
            <th scope="col" class="px-6 py-3">
              Nombre
            </th>
            <th scope="col" class="px-6 py-3">
              Precio
            </th>
            <th scope="col" class="px-6 py-3">
              Disponibilidad
            </th>
            <th scope="col" class="px-6 py-3">
              Acciones
            </th>
          </tr>
        </thead>
        <tbody id="variations-table">
          
        </tbody>
      </table>
    </div>
  </div>
</form>

#endexport
#endextend
